plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "id.rosyid.moviecatalogue"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_KEY", '"' + TMDB_API_KEY + '"' ?: "Define TMDB API Key Here"

        kapt{
            arguments{
                arg("room.schemaLocation","$projectDir/schemas".toString())
                arg("room.incremental","true")
                arg("room.expandProjection","true")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    // ui
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.palette:palette-ktx:$palleteVersion"
    // architecture component
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidLifecycleExtensionVersion"
    // kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinxCoroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinxCoroutinesVersion}"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportV4Version"
    // Image caching
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    // Retrofit + GSON
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltLifecycleVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltCompilerVersion"
    // testing
    testImplementation "junit:junit:$junitTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitAndroidTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    // mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}